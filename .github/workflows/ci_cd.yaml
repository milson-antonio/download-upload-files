name: CI/CD para Aplicação Java com Maven

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  release:
    types: [created]  # Dispara quando uma nova release é criada

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código-fonte
        uses: actions/checkout@v2

      - name: Configurar JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Instalar o Maven
        run: sudo apt-get install -y maven

      - name: Construir o aplicativo
        run: mvn package

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout do código-fonte
        uses: actions/checkout@v2

      - name: Configurar JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Instalar o Maven
        run: sudo apt-get install -y maven

      - name: Executar testes
        run: mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'

    steps:
      - name: Checkout do código-fonte
        uses: actions/checkout@v2

      - name: Configurar JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Instalar o Maven
        run: sudo apt-get install -y maven

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construir imagem do Docker
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app .

      - name: Extrair nome da tag ou release
        id: extract_tag
        run: echo "::set-output name=tag::$(echo ${{ github.ref }} | cut -d '/' -f 3)"

      - name: Tag da imagem do Docker
        run: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/my-app ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ steps.extract_tag.outputs.tag }}

      - name: Enviar imagem para o Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ steps.extract_tag.outputs.tag }}
